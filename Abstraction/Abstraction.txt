
ABSTRACTION :- 
    1. Abstraction is a process of showing essential data/ functionality to user.
    2. Also means identifying necessary characteristics of object and ignoring irrelevant details.

ABSTRACT CLASSES & KEYWORD :-
    1. Abstract class is defined with abstract keyword.
    2. Abstract keyword is used when we want to define superclass.

---> In java abstraction is achieved my INTERFACE and ABSTRACT CLASSES

Example of Abstractions are :-

--------------------------------------------------------------------------------------------------------------
Example 1.
    abstract class shape{
        String color;

        ---Below are abstract methods---
        abstract double area();
        public abstract String toString();

        ---abstract class can have constructor---
        public shape(String color){
            System.out.println("Shape constructor called...");
            this.color = color;
        }

        public String getColor(){
            return color;
        }
    }

    class Circle extends Shape{
        double radius;

        public Circle(String color, double radius){
            ---calling shape constructor---
            super(color);
            System.out.println("Circle constructor called...");
            this.radius = radius;
        }

        @Override double area(){
            return Math.PI * Math.pow(radius, 2);
        }

        @Override public String toString(){
            return "Circle color is " + super.getColor() + "and area is: " + area();
        }

    }
    class Rectangle extends Shape {

        double length;
        double width;

        public Rectangle(String color, double length,
                        double width)
        {
            // calling Shape constructor
            super(color);
            System.out.println("Rectangle constructor called");
            this.length = length;
            this.width = width;
        }

        @Override double area() { return length * width; }

        @Override public String toString()
        {
            return "Rectangle color is " + super.getColor()
                + "and area is : " + area();
        }
    }
    public class Test {
        public static void main(String[] args)
        {
            Shape s1 = new Circle("Red", 2.2);
            Shape s2 = new Rectangle("Yellow", 2, 4);

            System.out.println(s1.toString());
            System.out.println(s2.toString());
        }
    }

        |--------------------------------------------------------|
        |OUTPUT :-                                               |
        |    Shape constructor called                            |
        |    Circle constructor called                           |    
        |    Shape constructor called                            |
        |    Rectangle constructor called                        |
        |    Circle color is Redand area is : 15.205308443374602 |
        |    Rectangle color is Yellowand area is : 8.0          |
        |--------------------------------------------------------|
--------------------------------------------------------------------------------------------------------